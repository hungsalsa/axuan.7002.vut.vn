<?php
namespace quantri\modules\customer\controllers;use Yii;use quantri\modules\customer\models\Contacts;use quantri\modules\customer\models\ContactsSearch;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;class ContactsController extends Controller{public function behaviors(){return['verbs'=>['class'=>VerbFilter::className(),'actions'=>['delete'=>['POST'],],],];}public function actionIndex(){$searchModel=new ContactsSearch();$dataProvider=$searchModel->search(Yii::$app->request->queryParams);return $this->render('index',['searchModel'=>$searchModel,'dataProvider'=>$dataProvider,]);}public function actionView($id){return $this->render('view',['model'=>$this->findModel($id),]);}public function actionCreate(){$model=new Contacts();if($model->load(Yii::$app->request->post())&&$model->save()){return $this->redirect(['view','id'=>$model->id]);}return $this->render('create',['model'=>$model,]);}public function actionUpdate($id){$model=$this->findModel($id);if($model->load(Yii::$app->request->post())&&$model->save()){return $this->redirect(['view','id'=>$model->id]);}return $this->render('update',['model'=>$model,]);}public function actionDelete($id){$this->findModel($id)->delete();return $this->redirect(['index']);}public function actionQuickchange($id){try{$model=$this->findModel($id);if($model->status==0){$model->status=1;$postValue=' Đã tiếp nhận';}else{$model->status=0;$postValue='Chưa tiếp nhận';}$result=['id'=>$id,'value_post'=>$model->status,'name'=>$model->company_name,'field'=>'status','message'=>'Bạn '.$postValue.' hội viên :'.$model->company_name,];$result=array_merge($result,["postValue"=>$postValue]);$model->updated_at=time();$model->userUpdated=getUser()->id;if($model->save()==true){return json_encode($result);}else{$erros=$model->errors;$result=["error"=>$erros]+$result;return json_encode($result);}}catch(\Exception $e){$result=["error"=>'Loi roi : '.$e->getMessage().' In File : '.$e->getFile().' In Line : '.$e->getLine()];return json_encode($result);}}protected function findModel($id){if(($model=Contacts::findOne($id))!==null){return $model;}throw new NotFoundHttpException('The requested page does not exist.');}}